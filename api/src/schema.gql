# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Profile {
  id: ID!
  bio: String
  location: String
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: ID!
  email: String!
  name: String
  phone: String
  type: UserType
  profile: Profile
  createdAt: DateTime!
  verifiedAt: DateTime
  updatedAt: DateTime!
}

"""user types"""
enum UserType {
  RIDER
  DRIVER
  ADMIN
}

type AuthResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type BasicResponse {
  status: String
  message: String
}

type UserResponse {
  status: String
  message: String
  user: User!
}

type Ride {
  id: Int
  user: User
  pickup: String
  dropoff: String
  carType: CartType
  fare: String
  status: RideStatus
  createdAt: String
  updatedAt: String
}

"""Cart Type"""
enum CartType {
  SEDAN
  SUV
  HATCHBACK
  TRUCK
}

"""ride status"""
enum RideStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

type Rides {
  rides: [Ride!]!
  totalCount: Int!
}

type Query {
  user(id: Int!): User!
  me: User!
  getBookedRide: Ride!
  rides(params: FindAllRideInput): Rides!
  ride(id: Int!): Ride!
}

input FindAllRideInput {
  sortBy: SortBy
  sortOrder: SortOrder
  page: Int
  limit: Int
  filters: FilterRideInput
}

"""Sort by"""
enum SortBy {
  createdAt
  updatedAt
}

"""Sort order"""
enum SortOrder {
  asc
  desc
}

input FilterRideInput {
  pickup: String
  dropoff: String
  carType: CartType
  status: RideStatus
}

type Mutation {
  register(input: RegisterInput!): AuthResponse!
  login(input: LoginInput!): AuthResponse!
  logout: BasicResponse!
  updateMe(input: UpdateMeInput!): UserResponse!
  bookRide(input: BookRideInput!): Ride!
  updateRide(id: Int!, input: UpdateRideInput!): Ride!
  removeRide(id: Int!): Ride!
}

input RegisterInput {
  email: String!
  name: String
  phone: String
  password: String!
}

input LoginInput {
  """User Email"""
  email: String!

  """User Password"""
  password: String!
}

input UpdateMeInput {
  name: String
  phone: String
  userType: UserType
  profile: UpdateProfileInput
}

input UpdateProfileInput {
  bio: String
  location: String
}

input BookRideInput {
  pickup: String!
  dropoff: String!
  carType: CartType!
}

input UpdateRideInput {
  status: RideStatus!
}